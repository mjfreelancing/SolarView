@page "/settings"
@inject ILocalStorageService LocalStorage
@inject IChartDataCache ChartDataCache
@inject IAppState AppState

<h3>Settings</h3>

<table class="table">
	<thead>
		<tr>
			<th class="w-25" />
			<th class="w-75" />
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>User Name</td>
			<td>
				<AuthorizeView>
					<Authorized>
						@context.User.Identity.Name
					</Authorized>
					<NotAuthorized>
						<a href="AzureAD/Account/SignIn">Log in</a>
					</NotAuthorized>
				</AuthorizeView>
			</td>
		</tr>

		<tr>
			<td>Site Id</td>
			@if (AppState.CurrentSite == null)
			{
				<td><a href="">You need to provide a Site Id</a></td>
			}
			else
			{
				<td>@AppState.CurrentSite.SiteId</td>
			}
		</tr>

		<tr>
			<td>Cached Charts</td>
			@switch (CachedChartItemCount)
			{
				case 0:
					<td>There are no charts</td>
					break;

				case 1:
					<td>@CachedChartItemCount chart</td>
					break;

				default:
					<td>@CachedChartItemCount charts</td>
					break;
			}
		</tr>

		<tr>
			<td colspan="2">
				<button class="btn btn-primary" @onclick="ClearLocalStorage">Clear Cache</button>
				<p class="mt-2"><em>NOTE: </em>This will clear everything, including any current Site information.</p>
			</td>
		</tr>
	</tbody>
</table>

@code {
	private int CachedChartItemCount { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			if (AppState.CurrentSite != null)
			{
				CachedChartItemCount = await ChartDataCache.GetCount(AppState.CurrentSite.SiteId);
				StateHasChanged();
			}
		}
	}

	private async Task ClearLocalStorage()
	{
		await LocalStorage.ClearAsync();
		CachedChartItemCount = 0;

		AppState.CurrentSite = null;

		StateHasChanged();
	}
}