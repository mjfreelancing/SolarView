@page "/settings"
@inject ILocalStorageService LocalStorage
@inject IChartDataCache ChartDataCache
@inject IAppState AppState

<h3>Settings</h3>

<table class="table">
	<thead>
		<tr>
			<th class="w-25" />
			<th class="w-75" />
		</tr>
	</thead>
	<tbody>
		@*row 1*@
		<tr>
			<td>
				<p>Cached Charts</p>
			</td>
			<td>
				@switch (CachedChartItemCount)
				{
					case 0:
						<p>There are no charts</p>
						break;

					case 1:
						<p>@CachedChartItemCount chart</p>
						break;

					default:
						<p>@CachedChartItemCount charts</p>
						break;
				}
			</td>
		</tr>

		@*row 2*@
		<tr>
			<td colspan="2">
				<button type="button" class="btn btn-primary" @onclick="ClearLocalStorage">Clear Cache</button>
				<p><em>NOTE: </em>This will clear everything, including any current Site information.</p>
			</td>
		</tr>
	</tbody>
</table>

@code {
	private int CachedChartItemCount { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			if (AppState.CurrentSite != null)
			{
				CachedChartItemCount = await ChartDataCache.GetCount(AppState.CurrentSite.SiteId);
				StateHasChanged();
			}
		}
	}

	private async Task ClearLocalStorage()
	{
		AppState.CurrentSite = null;

		await LocalStorage.ClearAsync();
		CachedChartItemCount = 0;

		StateHasChanged();
	}
}