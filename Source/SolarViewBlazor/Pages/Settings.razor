@page "/settings"
@using SolarViewBlazor.Models
@using SolarViewBlazor.Cache
@inject ILocalStorageService LocalStorage
@inject IChartDataCache ChartDataCache

<h3>Settings</h3>

<div class="row">
	<div class="col-4">
		<div class="btn btn-primary">
			<button @onclick="ClearLocalStorage">Clear Cache</button>
		</div>
	</div>
	<div class="col-8">
		@if (CachedChartItemCount == 1)
		{
			<p>@CachedChartItemCount item is in the cache.</p>
		}
		else
		{
			<p>@CachedChartItemCount items are in the cache.</p>
		}
	</div>
</div>

@code {
	private int CachedChartItemCount { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			CachedChartItemCount = await ChartDataCache.GetCount();
			StateHasChanged();
		}
	}

	private async Task ClearLocalStorage()
	{
		await LocalStorage.ClearAsync();
		CachedChartItemCount = 0;

		StateHasChanged();
	}
}